class Vec2{constructor(a,b){this.x=a,this.y=b}static add(c,a){return a instanceof Vec2?new Vec2(c.x+a.x,c.y+a.y):new Vec2(c.x+a,c.y+a)}static byPolarCoords(a,b){return new Vec2(a*Math.cos(b),a*Math.sin(b))}static distanceChebyshev(c,a){return Math.max(Math.abs(c.x-a.x),Math.abs(c.y-a.y))}static distanceEuclidian(c,a){const b=c.x-a.x,d=c.y-a.y;return Math.sqrt(b*b+d*d)}static distanceManhattan(c,a){return Math.sqrt(Math.abs(c.x-a.x)+Math.abs(c.y-a.y))}static distanceMinkowski(c,a,b){return(Math.abs(c.x-a.x)**b+Math.abs(c.y-a.y)**b)**(1/b)}static divide(c,a){return a instanceof Vec2?new Vec2(c.x/a.x,c.y/a.y):new Vec2(c.x/a,c.y/a)}static multiply(c,a){return a instanceof Vec2?new Vec2(c.x*a.x,c.y*a.y):new Vec2(c.x*a,c.y*a)}static subtract(c,a){return a instanceof Vec2?new Vec2(c.x-a.x,c.y-a.y):new Vec2(c.x-a,c.y-a)}add(b){b instanceof Vec2?(this.x+=b.x,this.y+=b.y):(this.x+=b,this.y+=b)}copy(b){this.x=b.x,this.y=b.y}divide(b){b instanceof Vec2?(this.x/=b.x,this.y/=b.y):(this.x/=b,this.y/=b)}getAngle(){return Math.atan2(this.y,this.x)}getMagnitude(){return Math.sqrt(this.x*this.x+this.y*this.y)}limit(b){this.getMagnitude()>b&&(this.normalize(),this.multiply(b))}multiply(b){b instanceof Vec2?(this.x*=b.x,this.y*=b.y):(this.x*=b,this.y*=b)}normalize(){const a=this.getMagnitude();this.x/=a,this.y/=a}setMagnitude(b){this.normalize(),this.multiply(b)}subtract(b){b instanceof Vec2?(this.x-=b.x,this.y-=b.y):(this.x-=b,this.y-=b)}}class Vec3{constructor(a,b,c){this.x=a,this.y=b,this.z=c}static add(c,a){return a instanceof Vec3?new Vec3(c.x+a.x,c.y+a.y,c.z+a.z):new Vec3(c.x+a,c.y+a,c.z+a)}static distanceChebyshev(c,a){return Math.max(Math.abs(c.x-a.x),Math.abs(c.y-a.y),Math.abs(c.z-a.z))}static distanceEuclidian(c,a){const b=c.x-a.x,d=c.y-a.y,e=c.z-a.z;return Math.sqrt(b*b+d*d+e*e)}static distanceManhattan(c,a){return Math.sqrt(Math.abs(c.x-a.x)+Math.abs(c.y-a.y)+Math.abs(c.z-a.z))}static divide(c,a){return a instanceof Vec3?new Vec3(c.x/a.x,c.y/a.y,c.z/a.z):new Vec3(c.x/a,c.y/a,c.z/a)}static multiply(c,a){return a instanceof Vec3?new Vec3(c.x*a.x,c.y*a.y,c.z*a.z):new Vec3(c.x*a,c.y*a,c.z*a)}static subtract(c,a){return a instanceof Vec3?new Vec3(c.x-a.x,c.y-a.y,c.z-a.z):new Vec3(c.x-a,c.y-a,c.z-a)}add(b){b instanceof Vec3?(this.x+=b.x,this.y+=b.y,this.z+=b.z):(this.x+=b,this.y+=b,this.z+=b)}copy(b){this.x=b.x,this.y=b.y,this.z=b.z}divide(b){b instanceof Vec3?(this.x/=b.x,this.y/=b.y,this.z/=b.z):(this.x/=b,this.y/=b,this.z/=b)}getMagnitude(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)}limit(b){this.getMagnitude()>b&&(this.normalize(),this.multiply(b))}multiply(b){b instanceof Vec3?(this.x*=b.x,this.y*=b.y,this.z*=b.z):(this.x*=b,this.y*=b,this.z*=b)}normalize(){const a=this.getMagnitude();this.x/=a,this.y/=a,this.z/=a}setMagnitude(b){this.normalize(),this.multiply(b)}subtract(b){b instanceof Vec3?(this.x-=b.x,this.y-=b.y,this.z-=b.z):(this.x-=b,this.y-=b,this.z-=b)}}class Vec4{constructor(a,b,c,d){this.x=a,this.y=b,this.z=c,this.w=d}static add(c,a){return a instanceof Vec4?new Vec4(c.x+a.x,c.y+a.y,c.z+a.z,c.w+a.w):new Vec4(c.x+a,c.y+a,c.z+a,c.w+a)}static distanceChebyshev(c,a){return Math.max(Math.abs(c.x-a.x),Math.abs(c.y-a.y),Math.abs(c.z-a.z),Math.abs(c.w-a.w))}static distanceEuclidian(c,a){const b=c.x-a.x,d=c.y-a.y,e=c.z-a.z,f=c.w-a.w;return Math.sqrt(b*b+d*d+e*e+f*f)}static distanceManhattan(c,a){return Math.sqrt(Math.abs(c.x-a.x)+Math.abs(c.y-a.y)+Math.abs(c.z-a.z)+Math.abs(c.w-a.w))}static divide(c,a){return a instanceof Vec4?new Vec4(c.x/a.x,c.y/a.y,c.z/a.z,c.w/a.w):new Vec4(c.x/a,c.y/a,c.z/a,c.w/a)}static multiply(c,a){return a instanceof Vec4?new Vec4(c.x*a.x,c.y*a.y,c.z*a.z,c.w*a.w):new Vec4(c.x*a,c.y*a,c.z*a,c.w*a)}static subtract(c,a){return a instanceof Vec4?new Vec4(c.x-a.x,c.y-a.y,c.z-a.z,c.w-a.w):new Vec4(c.x-a,c.y-a,c.z-a,c.w-a)}add(b){b instanceof Vec4?(this.x+=b.x,this.y+=b.y,this.z+=b.z,this.w+=b.w):(this.x+=b,this.y+=b,this.z+=b,this.w+=b)}copy(b){this.x=b.x,this.y=b.y,this.z=b.z,this.w=b.w}divide(b){b instanceof Vec4?(this.x/=b.x,this.y/=b.y,this.z/=b.z,this.w/=b.w):(this.x/=b,this.y/=b,this.z/=b,this.w/=b)}getMagnitude(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)}limit(b){this.getMagnitude()>b&&(this.normalize(),this.multiply(b))}multiply(b){b instanceof Vec4?(this.x*=b.x,this.y*=b.y,this.z*=b.z,this.w*=b.w):(this.x*=b,this.y*=b,this.z*=b,this.w*=b)}normalize(){const a=this.getMagnitude();this.x/=a,this.y/=a,this.z/=a,this.w/=a}setMagnitude(b){this.normalize(),this.multiply(b)}subtract(b){b instanceof Vec4?(this.x-=b.x,this.y-=b.y,this.z-=b.z,this.w-=b.w):(this.x-=b,this.y-=b,this.z-=b,this.w-=b)}}